if (CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i686|x86|x86_64|x64|amd64|AMD64|win32|Win32")
    set(IS_X86 TRUE)
    if(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64|x64|amd64|AMD64")
        set(IS_X64 TRUE)
    endif()
endif()
if (CMAKE_SYSTEM_PROCESSOR MATCHES "arm|ARM|aarch64|arm64|ARM64|armeb|aarch64be|aarch64_be")
    set(IS_ARM TRUE)
endif()
if (CMAKE_SYSTEM_PROCESSOR MATCHES "riscv64|rv64")
    set(IS_RISCV64 TRUE)
endif()
if (CMAKE_SYSTEM_PROCESSOR MATCHES "riscv32|rv32")
    set(IS_RISCV32 TRUE)
endif()

target_compile_definitions(${PACKAGE} PUBLIC
    HAVE_CONFIG_H=1
    PARPAR_ENABLE_HASHER_MD5CRC=1
)

if(WIN32)
    target_compile_definitions(${PACKAGE} PRIVATE UNICODE _UNICODE)
    if(BUILD_TOOL)
        target_compile_definitions(${PACKAGE} PRIVATE _CONSOLE)
    endif()
endif()

if (BUILD_TOOL)
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        if(CMAKE_CXX_COMPILER_ID MATCHES "Clang|AppleClang")
            target_compile_definitions(${PACKAGE} PRIVATE -Weverything -Wno-c++98-compat)
        elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
            target_compile_definitions(${PACKAGE} PRIVATE -Wall -Wextra)
        elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
            target_compile_definitions(${PACKAGE} PRIVATE /Od /Zi /MTd W4)
        endif()
    elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
        if(CMAKE_CXX_COMPILER_ID MATCHES "Clang|AppleClang")
            target_compile_definitions(${PACKAGE} PRIVATE -fstack-protector-strong -Wno-c++98-compat)
        elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
            target_compile_definitions(${PACKAGE} PRIVATE -fstack-protector-strong)
        elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
            target_compile_definitions(${PACKAGE} PRIVATE /GS- /Gy /sdl- /Oy /Oi /MT /Gy /OPT:REF /OPT:ICF)
        endif()
    endif()
endif()
